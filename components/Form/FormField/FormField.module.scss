@import '../../Button/Button.module.scss';

.fieldWrapper {
  flex: 100%;
  margin: 0 20px;
  border-bottom: solid 1px var(--theme-4);
  position: relative;

  &.radio {
    border-bottom: none;
  }
  
  &.checkbox {
    border-bottom: none;
    margin-top: 18px;

    label {
      display: flex;
      vertical-align: middle;
      align-items: center;

      > input {
        margin-right: 15px;
      }
    }

    > label > input {
      width: 22px;
      height: 22px;
    }
  }

  &[data-field='field_street'] {
    flex: 240%;
  }

  :global {
    .description {
      font-size: 0.95rem;
      line-height: 1.3;
      padding: 20px 30px;
      margin-bottom: 10px;
      border-bottom: solid 1px var(--theme-6);
    }

    input,
    label {
      transition: 0.4s border-color, 0.4s color;
    }

    label {
      color: var(--theme-4);
      font-size: 16px;
      margin-bottom: 5px;
      display: block;
    }

    select {
      color: var(--theme-4);
    }

    input {
      color: var(--theme-5);
    }

    select,
    input:not(.react-dropdown-select-input),
    textarea {
      display: block;
      background: transparent;
      height: 40px;
      width: 100%;
      padding: 3px 0;
    }

    textarea {
      border: transparent;
    }

    select {
      option:first {
        color: var(--theme-4);
      }
    }
  }
}

.selectTouched {
  color: var(--theme-5) !important;
}

.fieldIsFocused {
  border-color: var(--theme-9);

  label {
    color: var(--theme-9);
  }
}


.radioGroup {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  margin-top: 15px;

  .radioWrapper {
    margin: 0 10px;
  }

  .radioInput {
    display: none !important;
  }

  .radioButton {
    @extend .buttonWrapper;
    border-color: var(--theme-5);
    background-color: var(--theme-5);
  }
  
  .radioInput:hover + .radioButton {
    border-color: var(--theme-5) !important;
    background-color: var(--theme-5) !important;
  }

  .radioInput:not(:checked) + .radioButton {
    @extend .invertedWrapper;
    border-color: var(--theme-5);
    color: var(--theme-5);
  }
}

.errorWrapper {
  position: absolute;
  transform: translateY(8px);
  font-size: 12px;
}

.hasError {
  border-color: var(--theme-error);

  &,
  input,
  option,
  label {
    color: var(--theme-error);
  }
}
